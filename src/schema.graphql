type AddMandalartResponse {
  ok: Boolean!
  error: String
}

type Mutation {
  AddMandalart(name: String!, startDate: String!, endDate: String!, goal: String!): AddMandalartResponse!
  DeleteMandalart(mandalartId: Int!): DeleteMandalartResponse!
  EditMandalart(mandalartId: Int!, name: String, endDate: String, goal: String): EditMandalartResponse!
  AddRating(tier: Int!, tierImage: String!, totalScore: Int!): AddRatingResponse!
  DeleteRating(ratingId: Int!): DeleteRatingResponse!
  EditRating(ratingId: Int!, tier: Int!, tierImage: String!, totalScore: Int!): EditRatingResponse!
  AddReward(ratingId: Int!, score: Int!, message: String): AddRewardResponse!
  DeleteReward(rewardId: Int!): DeleteRewardResponse!
  EditReward(rewardId: Int!, score: Int!, message: String): EditRewardResponse!
  AddSubTodo(todoId: Int!, title: String!, startDate: String!, endDate: String!, comments: [String], isAchieved: Boolean! = false): AddSubTodoResponse!
  DeleteSubTodo(subTodoId: Int!): DeleteSubTodoResponse!
  EditSubTodo(subTodoId: Int!, title: String, endDate: String, comments: [String], isAchieved: Boolean!): EditSubTodoResponse!
  AddTodo(mandalartId: Int!, title: String!, startDate: String!, endDate: String!, comments: [String], isAchieved: Boolean! = false): AddTodoResponse!
  DeleteTodo(todoId: Int!): DeleteTodoResponse!
  EditTodo(todoId: Int!, title: String, endDate: String, comments: [String], isAchieved: Boolean!): EditTodoResponse!
  EmailSignIn(email: String!, password: String!): EmailSignInResponse!
  EmailSignUp(email: String!, password: String!, firstName: String!, lastName: String!, age: Int, profileImage: String): EmailSignUpResponse!
  FacebookConnect(firstName: String!, lastName: String!, email: String!, fbId: String!): FacebookConnectResponse!
}

type DeleteMandalartResponse {
  ok: Boolean!
  error: String
}

type EditMandalartResponse {
  ok: Boolean!
  error: String
}

type GetMyMandalartsResponse {
  ok: Boolean!
  error: String
  mandalarts: [Mandalart]
}

type Query {
  GetMyMandalarts: GetMyMandalartsResponse!
  GetMyRating: GetMyRatingResponse!
  GetRewardsByRatingId(ratingId: Int!): GetRewardsByRatingIdResponse!
  reward(id: Int!): Reward
  GetSubTodosByTodoId(todoId: Int!): GetSubTodosByTodoIdResponse!
  subTodo(id: Int!): SubTodo
  GetTodosByMandalartId(mandalartId: Int!): GetTodosByMandalartIdResponse!
  todo(id: Int!): Todo
  GetMyProfile: GetMyProfileResponse!
  users: [User!]!
}

type Mandalart {
  id: Int!
  name: String!
  startDate: String!
  endDate: String!
  goal: String
  createdAt: String!
  updatedAt: String
  achievementRate: Int
  user: User!
  todos: [Todo]
}

type AddRatingResponse {
  ok: Boolean!
  error: String
}

type DeleteRatingResponse {
  ok: Boolean!
  error: String
}

type EditRatingResponse {
  ok: Boolean!
  error: String
}

type GetMyRatingResponse {
  ok: Boolean!
  error: String
  rating: Rating
}

type Rating {
  id: Int!
  tier: Int!
  tierImage: String!
  totalScore: Int!
  createdAt: String!
  updatedAt: String
  userId: Int
  user: User!
  rewards: [Reward]
}

type AddRewardResponse {
  ok: Boolean!
  error: String
  reward: Reward
}

type DeleteRewardResponse {
  ok: Boolean!
  error: String
}

type EditRewardResponse {
  ok: Boolean!
  error: String
}

type GetRewardsByRatingIdResponse {
  ok: Boolean!
  error: String
  rewards: [Reward]
}

type Reward {
  id: Int!
  score: Int!
  ratingId: Int!
  rating: Rating!
  message: String
  createdAt: String!
}

type AddSubTodoResponse {
  ok: Boolean!
  error: String
  subTodo: SubTodo
}

type DeleteSubTodoResponse {
  ok: Boolean!
  error: String
}

type EditSubTodoResponse {
  ok: Boolean!
  error: String
}

type GetSubTodosByTodoIdResponse {
  ok: Boolean!
  error: String
  subTodos: [SubTodo]
}

type SubTodo {
  id: Int!
  todoId: Int
  title: String!
  startDate: String!
  endDate: String!
  comments: [String]
  isAchieved: Boolean!
  createdAt: String!
  updatedAt: String
  user: User!
  todo: Todo!
}

type AddTodoResponse {
  ok: Boolean!
  error: String
  todo: Todo
}

type DeleteTodoResponse {
  ok: Boolean!
  error: String
}

type EditTodoResponse {
  ok: Boolean!
  error: String
}

type GetTodosByMandalartIdResponse {
  ok: Boolean!
  error: String
  todos: [Todo]
}

type Todo {
  id: Int!
  mandalartId: Int
  title: String!
  startDate: String!
  endDate: String!
  comments: [String]
  isAchieved: Boolean!
  createdAt: String!
  updatedAt: String
  user: User!
  mandalart: Mandalart!
  subTodos: [SubTodo]
}

type EmailSignInResponse {
  ok: Boolean!
  error: String
  token: String
}

type EmailSignUpResponse {
  ok: Boolean!
  error: String
  token: String
}

type FacebookConnectResponse {
  ok: Boolean!
  error: String
  token: String
}

type GetMyProfileResponse {
  ok: Boolean!
  error: String
  user: User
}

type User {
  id: Int!
  email: String
  password: String
  firstName: String
  lastName: String
  age: Int
  profileImage: String
  createdAt: String!
  updatedAt: String
  fullName: String
  fbId: String
  mandalarts: [Mandalart]
  todos: [Todo]!
  subTodos: [SubTodo]!
  rating: Rating
}
